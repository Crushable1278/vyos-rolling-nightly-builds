name: VyOS nightly build

on:
  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:
    inputs:
      BUILD_BY:
        description: 'Builder identifier (default: autobuild@vyos.net)'
        default: ''
      build_version:
        description: 'Version number (default: 1.5-rolling-ISO8601-TIMESTAMP)'
        default: ''
      SKIP_SMOKETEST_RAID1:
        description: 'Skip RAID1 Test'
        required: true
        type: boolean
        default: true
      SKIP_SMOKETEST_SYSTEM:
        description: 'Skip CLI smoketest'
        required: true
        type: boolean
        default: true
      SKIP_SMOKETEST_CONFIG:
        description: 'Skip config load test'
        required: true
        type: boolean
        default: true
      SKIP_SMOKETEST_TPM:
        description: 'Skip TPM test'
        required: true
        type: boolean
        default: true
      SKIP_SNAPSHOT_S3_UPLOAD:
        description: 'Skip snapshot upload to S3'
        required: true
        type: boolean
        default: true
      SKIP_RELEASE_PUBLISHING:
        description: 'Skip release publishing'
        required: true
        type: boolean
        default: false
      SKIP_SLACK_NOTIFICATIONS:
        description: 'Skip Slack notifications'
        required: true
        type: boolean
        default: true
      SKIP_DOWNLOADS_PAGE_UPDATE:
        description: 'Skip downloads page update'
        required: true
        type: boolean
        default: true

env:
  BUILD_BY: autobuild@vyos.net
  DEBIAN_MIRROR: http://deb.debian.org/debian/
  VYOS_MIRROR: https://rolling-packages.vyos.net/current/

jobs:
  build_iso:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    outputs:
      BUILD_BY: ${{ steps.set_env_variables.outputs.BUILD_BY }}
      build_version: ${{ steps.set_env_variables.outputs.build_version }}
      TIMESTAMP: ${{ steps.set_env_variables.outputs.TIMESTAMP }}
      PREVIOUS_SUCCESS_BUILD_TIMESTAMP: ${{ steps.set_env_variables.outputs.PREVIOUS_SUCCESS_BUILD_TIMESTAMP }}

    steps:
      ### Initialization ###
      - uses: actions/checkout@v4
      - name: "Initialization: set env variables"
        id: set_env_variables
        run: |
          set -x
          if [ -n "${{ github.event.inputs.BUILD_BY }}" ]; then
            echo "BUILD_BY=${{ github.event.inputs.BUILD_BY }}" >> $GITHUB_ENV
          fi
          if [ -z "${{ github.event.inputs.build_version }}" ]; then
            echo "build_version=1.5-rolling-$(date -u +%Y%m%d%H%M)" >> $GITHUB_OUTPUT
          else
            echo "build_version=${{ github.event.inputs.build_version }}" >> $GITHUB_OUTPUT
          fi
          echo "TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)" | tee -a $GITHUB_OUTPUT
          echo "PREVIOUS_SUCCESS_BUILD_TIMESTAMP=$(cat version.json | jq -r '.[0].timestamp')" | tee -a $GITHUB_OUTPUT
          echo "BUILD_BY=$BUILD_BY" | tee -a $GITHUB_OUTPUT

  publish:
    needs:
      - build_iso
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    if: ${{ success() && !inputs.SKIP_RELEASE_PUBLISHING }}
    steps:
      - uses: actions/checkout@v4
      - name: Clone vyos-build source code
        uses: actions/checkout@v4
        with:
          repository: vyos/vyos-build
          path: vyos-build
      - name: Clone vyos-1x source code
        uses: actions/checkout@v4
        with:
          repository: vyos/vyos-1x
          path: vyos-1x
      - name: CHECK THIS STEP
        id: commit_ids
        shell: bash
        run: |
          echo "TIMESTAMP: ${{ needs.build_iso.outputs.PREVIOUS_SUCCESS_BUILD_TIMESTAMP }}"
          ls -al
          cd vyos-build
          ls -al
          echo "GIT LOG"
          git log | head -n1
          echo "GIT LOG SINCE"
          git log --since "${{ needs.build_iso.outputs.PREVIOUS_SUCCESS_BUILD_TIMESTAMP }}" --format="%H" --reverse | head -n1
          echo "CHANGELOG_COMMIT_VYOS_BUILD=$(git log --since "${{ needs.build_iso.outputs.PREVIOUS_SUCCESS_BUILD_TIMESTAMP }}" --format="%H" --reverse | head -n1)" | tee -a $GITHUB_OUTPUT
          cd ../vyos-1x
          ls -al
          git log --since "${{ needs.build_iso.outputs.PREVIOUS_SUCCESS_BUILD_TIMESTAMP }}" --format="%H" --reverse | head -n1
          echo    "CHANGELOG_COMMIT_VYOS_1X=$(git log --since "${{ needs.build_iso.outputs.PREVIOUS_SUCCESS_BUILD_TIMESTAMP }}" --format="%H" --reverse | head -n1)" | tee -a $GITHUB_OUTPUT

      - name: "Release publishing: generate changelog for vyos-1x"
        id: generate_changelog_for_vyos-1x
        uses: mikepenz/release-changelog-builder-action@v4.1.0
        with:
          owner: "vyos"
          repo: "vyos-1x"
          fetchReviewers: false
          fromTag: ${{ steps.commit_ids.outputs.CHANGELOG_COMMIT_VYOS_1X }}
          toTag: HEAD
          configurationJson: |
            {
              "categories": [{"title": "", "labels": []}],
              "template": "#{{CHANGELOG}}",
              "pr_template": "- #{{TITLE}}\n   - PR: vyos/vyos-1x##{{NUMBER}}"
            }

      - name: "Release publishing: generate changelog for vyos-build"
        id: generate_changelog_for_vyos-build
        uses: mikepenz/release-changelog-builder-action@v4.1.0
        with:
          owner: "vyos"
          repo: "vyos-build"
          fetchReviewers: false
          fromTag: ${{ steps.commit_ids.outputs.CHANGELOG_COMMIT_VYOS_BUILD }}
          toTag: HEAD
          configurationJson: |
            {
              "categories": [{"title": "", "labels": []}],
              "template": "#{{CHANGELOG}}",
              "pr_template": "- #{{TITLE}}\n   - PR: vyos/vyos-build##{{NUMBER}}"
            }

      - name: "Release publishing: generate CHANGELOG.md"
        run: |
          cat <<EOF > CHANGELOG.md
          ## vyos-1x
          ${{ steps.generate_changelog_for_vyos-1x.outputs.changelog }}
          ## vyos-build
          ${{ steps.generate_changelog_for_vyos-build.outputs.changelog }}
          EOF
          cat CHANGELOG.md

      - name: "Release publishing: create version.json"
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "version.json"
          json: |
            [
              {
                "url": "https://github.com/vyos/vyos-rolling-nightly-builds/releases/download/vyos-${{ needs.build_iso.outputs.build_version }}-generic-amd64/vyos-${{ needs.build_iso.outputs.build_version }}-generic-amd64.iso",
                "version": "${{ needs.build_iso.outputs.build_version }}",
                "timestamp": "${{ needs.build_iso.outputs.TIMESTAMP }}"
              }
            ]

      - name: "Release publishing: check if the repository was modified during runtime to prevent autocommit failure"
        id: check_if_the_repository_was_modified_during_runtime
        run: |
          sudo chown -R $(whoami):$(whoami) ./*
          git pull --autostash --rebase
